x-ampel-env: &ampel-env
  TINI_SUBREAPER: 1
  MONGO_HOSTNAME: $MONGO_HOST
  MONGO_PORT: $MONGO_PORT
  MONGO_WRITER_USERNAME: alertprocessor
  MONGO_WRITER_PASSWORD_FILE: /run/secrets/mongo-alertprocessor-password
  MONGO_LOGGER_USERNAME: logger
  MONGO_LOGGER_PASSWORD_FILE: /run/secrets/mongo-logger-password
  
  GRAPHITE_HOSTNAME: $GRAPHITE_HOST
  GRAPHITE_PORT: $GRAPHITE_PORT

  ARCHIVE_HOSTNAME: $ARCHIVE_HOST
  ARCHIVE_PORT: $ARCHIVE_PORT
  ARCHIVE_WRITER_USERNAME: ampel-client
  ARCHIVE_WRITER_PASSWORD_FILE: /run/secrets/archive-write-password

  CATSHTM_PATH: /catalogs/catsHTM
  EXTCATS_HOSTNAME: $CATALOG_HOST
  EXTCATS_PORT: $CATALOG_PORT
  EXTCATS_READER_USERNAME: filterclient
  EXTCATS_READER_PASSWORD_FILE: /run/secrets/catalog-read-password

x-ampel: &ampel
  image: ampel:$AMPEL_TAG
  volumes:
    - type: volume
      source: $AMPEL_SRC
      target: /Ampel
    - $CATSHTM_PATH:/catalogs/catsHTM
  secrets:
    - archive-write-password
    - mongo-alertprocessor-password
    - mongo-logger-password
    - catalog-read-password
  environment: *ampel-env

  depends_on:
    - mongo
    - archive

version: '3.4'
services:
  catalog:
   # NB: we start the catalog _first_ because it may need to use port 27017 to initialize
   image: mongo:3.6
   command: ["mongod", "--port", "$CATALOG_PORT"]
   volumes:
     - $CATALOG_PATH:/data/db
     - $CATALOG_INITDB_PATH:/docker-entrypoint-initdb.d/
     - $CATALOG_MONGODUMP_PATH:/mnt
   ports:
     - "$CATALOG_PORT:$CATALOG_PORT"
   secrets:
     - mongo-root-password
     - catalog-read-password
     - catalog-write-password
   environment:
     MONGO_INITDB_ROOT_USERNAME: root
     MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo-root-password
     MONGODUMP_DIR: /mnt
     MONGO_USER: filterclient
     MONGO_PASSWORD_FILE: /run/secrets/catalog-read-password
     TOO_USER: ToO
     TOO_PASSWORD_FILE: /run/secrets/catalog-write-password
   deploy:
     restart_policy:
       condition: any
       delay: 10s
  mongo:
    image: mongo:3.6
    command: ["mongod", "--port", "$MONGO_PORT"]
    volumes:
      - $MONGO_PATH:/data/db
      - $MONGO_INITDB_PATH:/docker-entrypoint-initdb.d
    ports:
      - "$MONGO_PORT:$MONGO_PORT"
    secrets:
      - mongo-root-password
      - mongo-alertprocessor-password
      - mongo-logger-password
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo-root-password
      MONGO_USER: alertprocessor
      MONGO_PASSWORD_FILE: /run/secrets/mongo-alertprocessor-password
      LOGGER_USER: logger
      LOGGER_PASSWORD_FILE: /run/secrets/mongo-logger-password
    deploy:
      restart_policy:
        condition: any
        delay: 10s
  stats:
    <<: *ampel
    command: ["ampel-statspublisher"]
    secrets:
      - mongo-logger-password
      - archive-read-password
    environment:
      <<: *ampel-env
      ARCHIVE_READER_USERNAME: ampel-readonly
      ARCHIVE_READER_PASSWORD_FILE: /run/secrets/archive-read-password
    deploy:
        restart_policy:
            condition: any
            delay: 10s
    depends_on:
      - mongo
      - archive
      - graphite
  alertprocessor-public:
    <<: *ampel
    command: ["ampel-alertprocessor", "--broker", "epyc.astro.washington.edu:9092", "--group", "$GROUP_NAME", "--public"]
    deploy:
      replicas: $NUM_STREAMS
      restart_policy:
          condition: any
          delay: 10s
  alertprocessor-private:
    <<: *ampel
    command: ["ampel-alertprocessor", "--broker", "epyc.astro.washington.edu:9092", "--group", "$GROUP_NAME", "--private"]
    deploy:
      replicas: $NUM_STREAMS
      restart_policy:
          condition: any
          delay: 10s
  followup:
    <<: *ampel
    image: ampel:$AMPEL_TAG
    command: ["ampel-followup"]
    secrets:
      - archive-write-password
      - mongo-alertprocessor-password
      - mongo-logger-password
      - catalog-read-password
    environment:
      <<: *ampel-env
      EXTCATS_WRITER_USERNAME: ToO
      EXTCATS_WRITER_PASSWORD_FILE: /run/secrets/catalog-write-password

    deploy:
      restart_policy:
          condition: any
          delay: 10s
    depends_on:
      - mongo
      - archive
      - catalog
  t2-controller:
    <<: *ampel
    command: ["ampel-t2"]
    volumes:
      - type: volume
        source: $AMPEL_SRC
        target: /Ampel
      - type: tmpfs
        target: /tmp
    secrets:
      - mongo-alertprocessor-password
      - mongo-logger-password
      - catalog-read-password
    environment:
      <<: *ampel-env
      SNCOSMO_DATA_DIR: /tmp
    deploy:
      restart_policy:
          # max_attempts: 3
          condition: any
          delay: 10s
    depends_on:
     - mongo
  t3-controller:
    <<: *ampel
    image: ampel:$AMPEL_TAG
    command: ["ampel-t3"]
    secrets:
      - archive-write-password
      - mongo-alertprocessor-password
      - mongo-logger-password
      - catalog-read-password
      - catalog-write-password
    environment:
      <<: *ampel-env
      EXTCATS_WRITER_USERNAME: ToO
      EXTCATS_WRITER_PASSWORD_FILE: /run/secrets/catalog-write-password
    deploy:
      restart_policy:
          max_attempts: 30
          condition: any
          delay: 10s
    depends_on:
      - mongo

secrets:
  archive-read-password:
    file: secrets/archive-read-password.txt
  archive-write-password:
    file: secrets/archive-write-password.txt
  mongo-root-password:
    file: secrets/mongo-root-password.txt
  mongo-alertprocessor-password:
    file: secrets/mongo-alertprocessor-password.txt
  mongo-logger-password:
    file: secrets/mongo-logger-password.txt
  catalog-read-password:
    file: secrets/catalog-read-password.txt
  catalog-write-password:
    file: secrets/catalog-write-password.txt
