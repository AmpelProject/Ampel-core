name: ci

on:
  push:
    branches:
      - master
      - renovate/*
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies (with all extras)
      run: |
        python -m pip install --upgrade poetry
        poetry install $(cat pyproject.toml | awk '/^\s*$/{f=0};f{if ($1!="docs") printf(" -E %s",$1)};/\[tool\.poetry\.extras\]/{f=1}')
    - run: poetry run pytest --cov=ampel
  
  mypy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies (with all extras)
      run: |
        python -m pip install --upgrade poetry
        poetry install $(cat pyproject.toml | awk '/^\s*$/{f=0};f{if ($1!="docs") printf(" -E %s",$1)};/\[tool\.poetry\.extras\]/{f=1}')
    - run: poetry run mypy --namespace-packages -p ampel
  
  pypi:
    runs-on: ubuntu-latest
    needs: [test, mypy]
    if: ${{ github.event_name == 'push' && contains(github.ref, '/tags/v') }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade poetry
    - id: tag
      uses: dawidd6/action-get-tag@v1.0.0
    - name: Verify tag matches version
      run: |
        [ v"$(poetry version -s)" = "${{steps.tag.outputs.tag}}" ] || (echo "tag does not match version: "${{steps.tag.outputs.tag}}" != version v$(poetry version -s)" && false)
    - run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry publish -n --build
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        POETRY_PYPI_TOKEN_TESTPYPI: ${{ secrets.PYPI_TEST_API_TOKEN }}
